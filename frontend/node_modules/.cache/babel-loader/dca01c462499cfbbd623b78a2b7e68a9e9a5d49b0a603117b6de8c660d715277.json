{"ast":null,"code":"var _jsxFileName = \"/Users/shah/Desktop/chessGame/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChessBoard from './components/ChessBoard';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [gameId, setGameId] = useState(null);\n  const [userId, setUserId] = useState('');\n  const createGame = async () => {\n    const response = await fetch('http://localhost:5000/api/games/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        player1: userId,\n        player2: 'opponentId'\n      })\n    });\n    const data = await response.json();\n    setGameId(data.gameId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), userId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: gameId ? /*#__PURE__*/_jsxDEV(ChessBoard, {\n        gameId: gameId,\n        userId: userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createGame,\n        children: \"Create Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Login, {\n        setUserId: setUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"EdN7w/Mv+yZBs+u5G/SK/Si9ESI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ChessBoard","Login","Register","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","gameId","setGameId","userId","setUserId","createGame","response","fetch","method","headers","body","JSON","stringify","player1","player2","data","json","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/shah/Desktop/chessGame/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ChessBoard from './components/ChessBoard';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\nconst App = () => {\n  const [gameId, setGameId] = useState(null);\n  const [userId, setUserId] = useState('');\n\n  const createGame = async () => {\n    const response = await fetch('http://localhost:5000/api/games/create', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ player1: userId, player2: 'opponentId' }),\n    });\n    const data = await response.json();\n    setGameId(data.gameId);\n  };\n\n  return (\n    <div>\n      <h1>Chess Game</h1>\n      {userId ? (\n        <>\n          {gameId ? (\n            <ChessBoard gameId={gameId} userId={userId} />\n          ) : (\n            <button onClick={createGame}>Create Game</button>\n          )}\n        </>\n      ) : (\n        <>\n          <Login setUserId={setUserId} />\n          <Register />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;MACrEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAEV,MAAM;QAAEW,OAAO,EAAE;MAAa,CAAC;IACjE,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAClCd,SAAS,CAACa,IAAI,CAACd,MAAM,CAAC;EACxB,CAAC;EAED,oBACEL,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBlB,MAAM,gBACLP,OAAA,CAAAE,SAAA;MAAAmB,QAAA,EACGhB,MAAM,gBACLL,OAAA,CAACJ,UAAU;QAACS,MAAM,EAAEA,MAAO;QAACE,MAAM,EAAEA;MAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAE9CzB,OAAA;QAAQ0B,OAAO,EAAEjB,UAAW;QAAAY,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IACjD,gBACD,CAAC,gBAEHzB,OAAA,CAAAE,SAAA;MAAAmB,QAAA,gBACErB,OAAA,CAACH,KAAK;QAACW,SAAS,EAAEA;MAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/BzB,OAAA,CAACF,QAAQ;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACZ,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAnCID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqCT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}